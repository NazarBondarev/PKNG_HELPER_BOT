"""

PKNG-BOT v3.0
Date start develop: 03/09/2020
Date finish develop: -
Developer: Nazar Bondarev \ Telegram: @bonnaza

"""

import logging
import config
from aiogram import Bot, Dispatcher, executor, types, exceptions
from keyboards import Keyboards as keybs
import asyncio
from messages import MESSAGES
import re
import convertchanges

digits_pattern = re.compile(r'^[0-9]+ [0-9]+$', re.MULTILINE)


loop = asyncio.get_event_loop()
bot = Bot(token=config.API_TOKEN, parse_mode=types.ParseMode.MARKDOWN)
dp = Dispatcher(bot, loop=loop)
logging.basicConfig(level=logging.INFO)

messages_ids = {}

@dp.message_handler(commands= ['start'])
async def starting(message: types.Message):
    name = message.from_user.first_name
    messages_ids[message.from_user.id] = message.message_id
    print(messages_ids)
    await message.answer(f'–ü—Ä–∏–≤—ñ—Ç <b>{message.from_user.first_name}!</b>üëã\n'
                         f'–Ø –∑–≤–∏—á–∞–π–Ω–∏–π –±–æ—Ç, —è–∫–∏–π –±—É–≤ —Ä–æ–∑—Ä–æ–±–ª–µ–Ω–∏–π —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–æ –¥–ª—è –ü–æ–ª—Ç–∞–≤—Å—å–∫–æ–≥–æ –∫–æ–ª–µ–¥–∂—É –Ω–∞—Ñ—Ç–∏ —ñ –≥–∞–∑—É\n'
                        f'"–ù–∞—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ–≥–æ —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç—É –ü–æ–ª—Ç–∞–≤—Å—å–∫–∞ –ø–æ–ª—ñ—Ç–µ—Ö–Ω—ñ–∫–∞ —ñ–º–µ–Ω—ñ –Æ—Ä—ñ—è –ö–æ–Ω–¥—Ä–∞—Ç—é–∫–∞"'\
                        f'–¥–ª—è –∑—Ä—É—á–Ω–æ–≥–æ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ä–æ–∑–∫–ª–∞–¥—É —Ç–∞ –∑–º—ñ–Ω –¥–æ –Ω—å–æ–≥–æ!\n'\
                        f'–ü—Ä–æ—Å—Ç–æ –æ–±–µ—Ä–∏ —â–æ —Ç–µ–±–µ —Ü—ñ–∫–∞–≤–∏—Ç—å, –Ω–∏–∂—á–µ –≤ –º–µ–Ω—éüëá\n\n'\
                        f'–ö–æ–Ω—Ç–∞–∫—Ç–∏üîç\n'\
                        f'üìç–ù–∞—à–∞ –∞–¥—Ä–µ—Å–∞: –≤—É–ª. –ú.–ì—Ä—É—à–µ–≤—Å—å–∫–æ–≥–æ, 2–∞\n'\
                        f'üïí–ì—Ä–∞—Ñ—ñ–∫ —Ä–æ–±–æ—Ç–∏ –∫–æ–ª–µ–¥–∂—É: 08:00 - 17:00\n'\
                        f'ü§ñ–ë–æ—Ç –ø—Ä–∞—Ü—é—î 24/7\n'\
                        f'üì≤–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∏–π –Ω–æ–º–µ—Ä: +380997992161\n'\
                        f'üì©–ï–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞ –∞–¥—Ä–µ—Å–∞: pknghelper@ukr.net\n',
                         parse_mode='html',
                         reply_markup=general_menu_buttons)


@dp.callback_query_handler(lambda call: call.data == "help_for_dev")
async def test(call: types.CallbackQuery):
    PRICE = types.LabeledPrice(label='–ù–∞ –º—ñ–≤—ñ–Ω–∫—É —Ä–æ–∑—Ä–æ–±–Ω–∏–∫—É', amount=500)

    await bot.send_invoice(
        call.message.chat.id,
        title=MESSAGES['tm_title'],
        description=MESSAGES['tm_description'],
        provider_token=config.PAYMENTS_PROVIDER_TOKEN,
        currency='uah',
        is_flexible=False,  # True –µ—Å–ª–∏ –∫–æ–Ω–µ—á–Ω–∞—è —Ü–µ–Ω–∞ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Å–ø–æ—Å–æ–±–∞ –¥–æ—Å—Ç–∞–≤–∫–∏
        prices=[PRICE],
        start_parameter='time-machine-example',
        payload='some-invoice-payload-for-our-internal-use',
        reply_markup = payment_menu_buttons)
    print(call)

@dp.callback_query_handler(lambda call: call.data == "back_from_pay_menu")
async def back_to_general_from_payment(call: types.CallbackQuery):
    await bot.delete_message(call.message.chat.id, call.message.message_id)


@dp.pre_checkout_query_handler(lambda query: True)
async def process_pre_checkout_query(pre_checkout_query: types.PreCheckoutQuery):
    await bot.answer_pre_checkout_query(pre_checkout_query.id, ok=True)


@dp.callback_query_handler(lambda call: call.data in config.general_menu_buttons)
async def select_facult(call: types.CallbackQuery):

    if call.data == config.general_menu_buttons[0]:
        await bot.edit_message_text(chat_id=call.message.chat.id,
                                    message_id=call.message.message_id,
                                    text="–©–æ –∂, –æ–±–µ—Ä–∏ —Å–≤—ñ–π —Ñ–∞–∫—É–ª—å—Ç–µ—Ç...",
                                    reply_markup = facults_menu_buttons)

    if call.data == config.general_menu_buttons[-1]:
        await bot.edit_message_text(chat_id=call.message.chat.id,
                                    message_id=call.message.message_id,
                                    text=\
                                      f'–Ø –∑–≤–∏—á–∞–π–Ω–∏–π –±–æ—Ç, —è–∫–∏–π –±—É–≤ —Ä–æ–∑—Ä–æ–±–ª–µ–Ω–∏–π —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–æ –¥–ª—è –ü–æ–ª—Ç–∞–≤—Å—å–∫–æ–≥–æ –∫–æ–ª–µ–¥–∂—É –Ω–∞—Ñ—Ç–∏ —ñ –≥–∞–∑—É\n'
                                      f'"–ù–∞—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ–≥–æ —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç—É –ü–æ–ª—Ç–∞–≤—Å—å–∫–∞ –ø–æ–ª—ñ—Ç–µ—Ö–Ω—ñ–∫–∞ —ñ–º–µ–Ω—ñ –Æ—Ä—ñ—è –ö–æ–Ω–¥—Ä–∞—Ç—é–∫–∞"'\
                                      f'–¥–ª—è –∑—Ä—É—á–Ω–æ–≥–æ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ä–æ–∑–∫–ª–∞–¥—É —Ç–∞ –∑–º—ñ–Ω –¥–æ –Ω—å–æ–≥–æ!\n'\
                                      f'–ü—Ä–æ—Å—Ç–æ –æ–±–µ—Ä–∏ —â–æ —Ç–µ–±–µ —Ü—ñ–∫–∞–≤–∏—Ç—å, –Ω–∏–∂—á–µ –≤ –º–µ–Ω—éüëá\n\n'\
                                     f'–ö–æ–Ω—Ç–∞–∫—Ç–∏üîç\n' \
                                     f'üìç–ù–∞—à–∞ –∞–¥—Ä–µ—Å–∞: –≤—É–ª. –ú.–ì—Ä—É—à–µ–≤—Å—å–∫–æ–≥–æ, 2–∞\n' \
                                     f'üïí–ì—Ä–∞—Ñ—ñ–∫ —Ä–æ–±–æ—Ç–∏ –∫–æ–ª–µ–¥–∂—É: 08:00 - 17:00\n' \
                                     f'ü§ñ–ë–æ—Ç –ø—Ä–∞—Ü—é—î 24/7\n' \
                                     f'üì≤–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∏–π –Ω–æ–º–µ—Ä: +380997992161\n' \
                                     f'üì©–ï–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞ –∞–¥—Ä–µ—Å–∞: pknghelper@ukr.net\n',
                                     parse_mode='html',
                                     reply_markup=general_menu_buttons)

    if call.data == config.general_menu_buttons[1]:
        changes = convertchanges.download_changes_from_site()
        changes = '\n\n'.join(changes)
        await bot.edit_message_text(chat_id=call.message.chat.id,
                                    message_id=call.message.message_id,
                                    text="–û–±–µ—Ä–∏ —Å–≤–æ—é –≥—Ä—É–ø—É, —ñ —Ç—É—Ç –≤—ñ–¥–æ–±—Ä–∞–∂–∞—Ç–∏–º—É—Ç—å—Å—è –∑–º—ñ–Ω–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ –¥–ª—è —Ç–µ–±–µ! –¢–∞–∫–æ–∂, —Ç–∏ –±—É–¥–µ—à –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è —è–∫—â–æ —è –∑–Ω–∞–π–¥—É —Ç–≤–æ—é –≥—Ä—É–ø—É –≤ –∑–º—ñ–Ω–∞—Ö.\n\n"+changes,
                                    parse_mode='html',
                                    reply_markup=general_menu_buttons)
    if call.data == config.general_menu_buttons[2]:
        await bot.edit_message_text(chat_id=call.message.chat.id,
                                    message_id=call.message.message_id,
                                    text="""
<b>–ü–æ–Ω–µ–¥—ñ–ª–æ–∫, –≤—ñ–≤—Ç–æ—Ä–æ–∫, —Å–µ—Ä–µ–¥–∞, —á–µ—Ç–≤–µ—Ä.</b>
0 –ø–∞—Ä–∞	7.00 - 8.20
1 –ø–∞—Ä–∞	8.30 - 9.50
2 –ø–∞—Ä–∞	10.05 - 11.25
3 –ø–∞—Ä–∞	12.15 - 13.35
4 –ø–∞—Ä–∞	13.50 - 15.10
5 –ø–∞—Ä–∞	15.25 - 16.45
6 –ø–∞—Ä–∞	17.00 - 18.20
7 –ø–∞—Ä–∞	18.35 - 19.55

<b>–ü'—è—Ç–Ω–∏—Ü—è</b>
0 –ø–∞—Ä–∞	7.00 - 8.20
1 –ø–∞—Ä–∞	8.30 - 9.50
2 –ø–∞—Ä–∞	10.05 - 11.25
3 –ø–∞—Ä–∞	11.40 - 13.00
4 –ø–∞—Ä–∞	13.15 - 14.35
5 –ø–∞—Ä–∞	14.50 - 16.10
6 –ø–∞—Ä–∞	16.25 - 17.45
7 –ø–∞—Ä–∞	18.00 - 19.20
                        """,

                                parse_mode='html',
                                reply_markup=general_menu_buttons)







@dp.callback_query_handler(lambda call: call.data == '–í –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é‚¨Ö'[0:10] or call.data == '–ù–∞–∑–∞–¥‚¨Ö')
async def backs_to_menus(call: types.CallbackQuery):
    if call.data == '–í –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é‚¨Ö'[0:10]:
        await bot.edit_message_text(chat_id=call.message.chat.id,
                                    message_id=call.message.message_id,
                                    text="–ú–∏ –∑–Ω–æ–≤—É –≤ –≥–æ–ª–æ–≤–Ω–æ–º—É –º–µ–Ω—é...\n–£—Ä–∞?üòê",
                                    reply_markup=general_menu_buttons)

    if call.data == '–ù–∞–∑–∞–¥‚¨Ö':
        await bot.edit_message_text(chat_id=call.message.chat.id,
                                    message_id=call.message.message_id,
                                    text="–î–æ–±—Ä–µ, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ—Å—è –≤ –º–µ–Ω—é –≤–∏–±–æ—Ä—É —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞...",
                                    reply_markup=facults_menu_buttons)

@dp.callback_query_handler(lambda call: call.data in facults_for_select_groups)
async def back_to_general_menu(call: types.CallbackQuery):

    groups_menu_buttons = keybs(keybs.keyboards).groups_select_menu(call.data)
    await bot.edit_message_text(chat_id=call.message.chat.id,
                                message_id=call.message.message_id,
                                text="–ü—Ä–∏–π—à–æ–≤ —á–∞—Å –æ–±—Ä–∞—Ç–∏ —Å–≤–æ—é –≥—Ä—É–ø—É...",
                                reply_markup=groups_menu_buttons)

@dp.callback_query_handler(lambda call: call.data)
async def view_group_menu(call: types.CallbackQuery):

    groups_menu_buttons = keybs(keybs.keyboards).groups_select_menu(call.data)
    await bot.edit_message_text(chat_id=call.message.chat.id,
                                message_id=call.message.message_id,
                                text="–ü—Ä–∏–π—à–æ–≤ —á–∞—Å –æ–±—Ä–∞—Ç–∏ —Å–≤–æ—é –≥—Ä—É–ø—É...",
                                reply_markup=groups_menu_buttons)


if __name__ == "__main__":
    general_menu_buttons = keybs(keybs.keyboards).upload_general_menu()
    facults_menu_buttons = keybs(keybs.keyboards).facults_select_menu()
    payment_menu_buttons = keybs(keybs.keyboards).payment_menu()

    facults_for_select_groups = [s[0:10] for s in config.facults_menu_buttons.keys()]

    executor.start_polling(dp, skip_updates=True)
