"""

PKNG-BOT v3.0
Date start develop: 03/09/2020
Date finish develop: -
Developer: Nazar Bondarev \ Telegram: @bonnaza

"""


from getchanges import GetChanges as Gt
import logging
import re
import datetime
import config
import json
from aiogram import Bot, Dispatcher, executor, types, exceptions
from keyboards import Keyboards as keybs
import asyncio
import re
from json import JSONDecodeError

digits_pattern = re.compile(r'^[0-9]+ [0-9]+$', re.MULTILINE)
loop = asyncio.get_event_loop()
bot = Bot(token=config.API_TOKEN, parse_mode=types.ParseMode.MARKDOWN)
dp = Dispatcher(bot, loop=loop)
logging.basicConfig(level=logging.INFO)
messages_ids = {}
days_associations = {
    "Monday": '–ø–æ–Ω–µ–¥—ñ–ª–æ–∫',
    "Tuesday": '–≤—ñ–≤—Ç–æ—Ä–æ–∫',
    "Wednesday": '—Å–µ—Ä–µ–¥—É',
    "Thursday": '—á–µ—Ç–≤–µ—Ä',
    "Friday":"–ø'—è—Ç–Ω–∏—Ü—é"
}

months_associations = {
    'December': '–≥—Ä—É–¥–Ω—è',
    'January': '—Å—ñ—á–Ω—è',
    'February':'–ª—é—Ç–æ–≥–æ',
    'March': '–±–µ—Ä–µ–∑–Ω—è',
    'April': '–∫–≤—ñ—Ç–Ω—è',
    'May': '—Ç—Ä–∞–≤–Ω—è',
    'June': '—á–µ—Ä–≤–Ω—è',
    'July':'–ª–∏–ø–Ω—è',
    'August':'—Å–µ—Ä–ø–Ω—è',
    'September':'–≤–µ—Ä–µ—Å–Ω—è',
    'October':'–∂–æ–≤—Ç–Ω—è',
    'November':'–ª–∏—Å—Ç–æ–ø–∞–¥–∞'
}




@dp.message_handler(commands= ['start'])
async def starting(message: types.Message):

    if str(message.from_user.id) not in users.keys():
        users[str(message.from_user.id)] = {
            "name": message.from_user.first_name,
            "surname": message.from_user.last_name,
            "username": message.from_user.username,
            "group": "pass"
        }
        await update_users_data(message, users, "new_member")

    name = message.from_user.first_name
    messages_ids[message.from_user.id] = message.message_id
    await message.answer(f'–ü—Ä–∏–≤—ñ—Ç <b>{message.from_user.first_name}!</b>üëã\n'
                         f'–Ø –∑–≤–∏—á–∞–π–Ω–∏–π –±–æ—Ç, —è–∫–∏–π –±—É–≤ —Ä–æ–∑—Ä–æ–±–ª–µ–Ω–∏–π —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–æ –¥–ª—è –ü–æ–ª—Ç–∞–≤—Å—å–∫–æ–≥–æ –∫–æ–ª–µ–¥–∂—É –Ω–∞—Ñ—Ç–∏ —ñ –≥–∞–∑—É\n'
                        f'"–ù–∞—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ–≥–æ —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç—É –ü–æ–ª—Ç–∞–≤—Å—å–∫–∞ –ø–æ–ª—ñ—Ç–µ—Ö–Ω—ñ–∫–∞ —ñ–º–µ–Ω—ñ –Æ—Ä—ñ—è –ö–æ–Ω–¥—Ä–∞—Ç—é–∫–∞"'\
                        f' –¥–ª—è –∑—Ä—É—á–Ω–æ–≥–æ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ä–æ–∑–∫–ª–∞–¥—É —Ç–∞ –∑–º—ñ–Ω –¥–æ –Ω—å–æ–≥–æ!\n'\
                        f'–ü—Ä–æ—Å—Ç–æ –æ–±–µ—Ä–∏ —â–æ —Ç–µ–±–µ —Ü—ñ–∫–∞–≤–∏—Ç—å, –Ω–∏–∂—á–µ –≤ –º–µ–Ω—éüëá\n\n'\
                        f'–ö–æ–Ω—Ç–∞–∫—Ç–∏üîç\n'\
                        f'üìç–ù–∞—à–∞ –∞–¥—Ä–µ—Å–∞: –≤—É–ª. –ú.–ì—Ä—É—à–µ–≤—Å—å–∫–æ–≥–æ, 2–∞\n'\
                        f'üïí–ì—Ä–∞—Ñ—ñ–∫ —Ä–æ–±–æ—Ç–∏ –∫–æ–ª–µ–¥–∂—É: 08:00 - 17:00\n'\
                        f'ü§ñ–ë–æ—Ç –ø—Ä–∞—Ü—é—î 24/7\n'\
                        f'üìû–ö–æ–Ω—Ç–∞–∫—Ç–∏ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ü—ñ—ó: —Ç–µ–ª./—Ñ–∞–∫—Å: (0532) 63-81-48\n'\
                        f'üì©–ï–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞ –∞–¥—Ä–µ—Å–∞: pknghelper@ukr.net\n',
                         parse_mode='html',
                         reply_markup=general_menu_buttons)
@dp.message_handler(commands= ['info'])
async def info(message: types.Message):
    await bot.send_message(message.chat.id,
                        f'–ß–∞—Ç-–±–æ—Ç, —è–∫–∏–π –±—É–≤ —Ä–æ–∑—Ä–æ–±–ª–µ–Ω–∏–π —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–æ –¥–ª—è –ü–æ–ª—Ç–∞–≤—Å—å–∫–æ–≥–æ –∫–æ–ª–µ–¥–∂—É –Ω–∞—Ñ—Ç–∏ —ñ –≥–∞–∑—É\n'
                        f'"–ù–∞—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ–≥–æ —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç—É –ü–æ–ª—Ç–∞–≤—Å—å–∫–∞ –ø–æ–ª—ñ—Ç–µ—Ö–Ω—ñ–∫–∞ —ñ–º–µ–Ω—ñ –Æ—Ä—ñ—è –ö–æ–Ω–¥—Ä–∞—Ç—é–∫–∞"'\
                        f' –¥–ª—è –∑—Ä—É—á–Ω–æ–≥–æ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ä–æ–∑–∫–ª–∞–¥—É —Ç–∞ –∑–º—ñ–Ω –¥–æ –Ω—å–æ–≥–æ!\n'\
                        f'–ö–æ–Ω—Ç–∞–∫—Ç–∏üîç\n'\
                        f'üìç–ù–∞—à–∞ –∞–¥—Ä–µ—Å–∞: –≤—É–ª. –ú.–ì—Ä—É—à–µ–≤—Å—å–∫–æ–≥–æ, 2–∞\n'\
                        f'üïí–ì—Ä–∞—Ñ—ñ–∫ —Ä–æ–±–æ—Ç–∏ –∫–æ–ª–µ–¥–∂—É: 08:00 - 17:00\n'\
                        f'ü§ñ–ë–æ—Ç –ø—Ä–∞—Ü—é—î 24/7\n'\
                        f'üìû–ö–æ–Ω—Ç–∞–∫—Ç–∏ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ü—ñ—ó: —Ç–µ–ª./—Ñ–∞–∫—Å: (0532) 63-81-48\n'\
                        f'üì©–ï–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞ –∞–¥—Ä–µ—Å–∞: pknghelper@ukr.net\n')
@dp.message_handler(commands=['m'])
async def malling(message: types.Message):
    if message.from_user.id == 366954921:
        format_malling = message.text.replace("/m", "")
        i = 0
        for item in users.keys():
            try:
                await bot.send_message(int(item), format_malling)
                i+=1
            except (exceptions.BotBlocked, exceptions.UserDeactivated):
                continue
        await bot.send_message(366954921, f"–†–∞—Å—Å—ã–ª–∫—É –ø–æ–ª—É—á–∏–ª–∏ {i} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
@dp.callback_query_handler(lambda call: call.data in config.general_menu_buttons)
async def select_facult(call: types.CallbackQuery):
    global group_changes
    try:
        if call.data == config.general_menu_buttons[0] and users[str(call.from_user.id)]['group'] == 'pass':
            await bot.edit_message_text(chat_id=call.message.chat.id,
                                        message_id=call.message.message_id,
                                        text="–©–æ –∂, –æ–±–µ—Ä–∏ —Å–≤—ñ–π —Ñ–∞–∫—É–ª—å—Ç–µ—Ç...",
                                        reply_markup = facults_menu_buttons)
    except KeyError:
        users[str(call.from_user.id)] = {
            "name": call.from_user.first_name,
            "surname": call.from_user.last_name,
            "username": call.from_user.username,
            "group": "pass"
        }
        await update_users_data(call, users, "new_member")
        await bot.edit_message_text(chat_id=call.message.chat.id,
                                    message_id=call.message.message_id,
                                    text="–©–æ –∂, –æ–±–µ—Ä–∏ —Å–≤—ñ–π —Ñ–∞–∫—É–ª—å—Ç–µ—Ç...",
                                    reply_markup=facults_menu_buttons)



    if call.data == config.general_menu_buttons[0] and users[str(call.from_user.id)]['group'] != 'pass':
        group_menu_keyboard = keybs(keybs.keyboards).group_menu(users[str(call.from_user.id)]['group'])

        await bot.edit_message_text(chat_id=call.message.chat.id,
                                    message_id=call.message.message_id,
                                    text=
                                    f"–ú–µ–Ω—é –≥—Ä—É–ø–∏: <b>{users[str(call.from_user.id)]['group']}</b>\n\n"
                                    f"üëá –î—ñ–∑–Ω–∞–π—Å—è —Ä–æ–∑–∫–ª–∞–¥ —Å–≤–æ—î—ó –≥—Ä—É–ø–∏ —è–∫–∏–π —Ç–µ–±–µ —Ü—ñ–∫–∞–≤–∏—Ç—å –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –º–µ–Ω—é –Ω–∏–∂—á–µ",
                                    parse_mode='html', reply_markup=group_menu_keyboard)

    if call.data == config.general_menu_buttons[-1]:
        await bot.edit_message_text(chat_id=call.message.chat.id,
                                    message_id=call.message.message_id,
                                    text=\
                                      f'–Ø –∑–≤–∏—á–∞–π–Ω–∏–π —á–∞—Ç-–±–æ—Ç, —è–∫–∏–π –±—É–≤ —Ä–æ–∑—Ä–æ–±–ª–µ–Ω–∏–π —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–æ –¥–ª—è –ü–æ–ª—Ç–∞–≤—Å—å–∫–æ–≥–æ –∫–æ–ª–µ–¥–∂—É –Ω–∞—Ñ—Ç–∏ —ñ –≥–∞–∑—É\n'
                                      f'"–ù–∞—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ–≥–æ —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç—É –ü–æ–ª—Ç–∞–≤—Å—å–∫–∞ –ø–æ–ª—ñ—Ç–µ—Ö–Ω—ñ–∫–∞ —ñ–º–µ–Ω—ñ –Æ—Ä—ñ—è –ö–æ–Ω–¥—Ä–∞—Ç—é–∫–∞" '\
                                      f'–¥–ª—è –∑—Ä—É—á–Ω–æ–≥–æ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ä–æ–∑–∫–ª–∞–¥—É —Ç–∞ –∑–º—ñ–Ω –¥–æ –Ω—å–æ–≥–æ!\n'\
                                      f'–ü—Ä–æ—Å—Ç–æ –æ–±–µ—Ä–∏ —â–æ —Ç–µ–±–µ —Ü—ñ–∫–∞–≤–∏—Ç—å, –Ω–∏–∂—á–µ –≤ –º–µ–Ω—éüëá\n\n'\
                                     f'–ö–æ–Ω—Ç–∞–∫—Ç–∏üîç\n' \
                                     f'üìç–ù–∞—à–∞ –∞–¥—Ä–µ—Å–∞: –≤—É–ª. –ú.–ì—Ä—É—à–µ–≤—Å—å–∫–æ–≥–æ, 2–∞\n' \
                                     f'üïí–ì—Ä–∞—Ñ—ñ–∫ —Ä–æ–±–æ—Ç–∏ –∫–æ–ª–µ–¥–∂—É: 08:00 - 17:00\n' \
                                     f'ü§ñ–ë–æ—Ç –ø—Ä–∞—Ü—é—î 24/7\n' \
                                     f'üì≤–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∏–π –Ω–æ–º–µ—Ä: +380997992161\n' \
                                     f'üì©–ï–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞ –∞–¥—Ä–µ—Å–∞: pknghelper@ukr.net\n',
                                     parse_mode='html',
                                     reply_markup=general_menu_buttons)

    if call.data == config.general_menu_buttons[1]:
        result = Gt().get_changes()
        if result:
            await bot.send_photo(chat_id = call.message.chat.id, photo=open("./data/zm.jpg", "rb"))



    if call.data == config.general_menu_buttons[2]:
        await bot.edit_message_text(chat_id=call.message.chat.id,
                                    message_id=call.message.message_id,
                                    text="""
<b>–ü–æ–Ω–µ–¥—ñ–ª–æ–∫, –≤—ñ–≤—Ç–æ—Ä–æ–∫, —Å–µ—Ä–µ–¥–∞, —á–µ—Ç–≤–µ—Ä.</b>
0 –ø–∞—Ä–∞	7.00 - 8.20
1 –ø–∞—Ä–∞	8.30 - 9.50
2 –ø–∞—Ä–∞	10.05 - 11.25
3 –ø–∞—Ä–∞	12.15 - 13.35
4 –ø–∞—Ä–∞	13.50 - 15.10
5 –ø–∞—Ä–∞	15.25 - 16.45
6 –ø–∞—Ä–∞	17.00 - 18.20
7 –ø–∞—Ä–∞	18.35 - 19.55

<b>–ü'—è—Ç–Ω–∏—Ü—è</b>
0 –ø–∞—Ä–∞	7.00 - 8.20
1 –ø–∞—Ä–∞	8.30 - 9.50
2 –ø–∞—Ä–∞	10.05 - 11.25
3 –ø–∞—Ä–∞	11.40 - 13.00
4 –ø–∞—Ä–∞	13.15 - 14.35
5 –ø–∞—Ä–∞	14.50 - 16.10
6 –ø–∞—Ä–∞	16.25 - 17.45
7 –ø–∞—Ä–∞	18.00 - 19.20
                        """,

                                parse_mode='html',
                                reply_markup=general_menu_buttons)







@dp.callback_query_handler(lambda call: call.data == '–í –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é‚¨Ö'[0:10] or call.data == '–ù–∞–∑–∞–¥‚¨Ö')
async def backs_to_menus(call: types.CallbackQuery):
    if call.data == '–í –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é‚¨Ö'[0:10]:
        await bot.edit_message_text(chat_id=call.message.chat.id,
                                    message_id=call.message.message_id,
                                    text="–ú–∏ –∑–Ω–æ–≤—É –≤ –≥–æ–ª–æ–≤–Ω–æ–º—É –º–µ–Ω—é...\n–£—Ä–∞?üòê",
                                    reply_markup=general_menu_buttons)

    if call.data == '–ù–∞–∑–∞–¥‚¨Ö':
        await bot.edit_message_text(chat_id=call.message.chat.id,
                                    message_id=call.message.message_id,
                                    text="–î–æ–±—Ä–µ, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ—Å—è –≤ –º–µ–Ω—é –≤–∏–±–æ—Ä—É —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞...",
                                    reply_markup=facults_menu_buttons)

@dp.callback_query_handler(lambda call: call.data in facults_for_select_groups)
async def select_group(call: types.CallbackQuery):

    groups_menu_buttons = keybs(keybs.keyboards).groups_select_menu(call.data)
    await bot.edit_message_text(chat_id=call.message.chat.id,
                                message_id=call.message.message_id,
                                text="–ü—Ä–∏–π—à–æ–≤ —á–∞—Å –æ–±—Ä–∞—Ç–∏ —Å–≤–æ—é –≥—Ä—É–ø—É...",
                                reply_markup=groups_menu_buttons)

@dp.callback_query_handler(lambda call: call.data in groups_list or call.data == "back_to_general_menu" and call.data != "–ù–∞–∑–∞–¥‚¨Ö")
async def save_user_group_and_view_group_menu(call: types.CallbackQuery):


    if call.data in groups_list:
        users[str(call.from_user.id)]['group'] = call.data
        await update_users_data(call, users, "new_group_select")
        group_menu_keyboard = keybs(keybs.keyboards).group_menu(call.data)

        await bot.edit_message_text(chat_id=call.message.chat.id,
                                   message_id = call.message.message_id,
                                   text=
                                   f"üòë –ú–∏ —Ç–µ–±–µ –∑–∞–ø–∞–º'—è—Ç–∞–ª–∏\n\n"
                                   f"ü•≥ –í—ñ—Ç–∞—é –≤ –º–µ–Ω—é –≥—Ä—É–ø–∏ <b>{call.data}</b>\n"
                                   f"üëá –î—ñ–∑–Ω–∞–π—Å—è —Ä–æ–∑–∫–ª–∞–¥ —Å–≤–æ—î—ó –≥—Ä—É–ø–∏ —è–∫–∏–π —Ç–µ–±–µ —Ü—ñ–∫–∞–≤–∏—Ç—å –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –º–µ–Ω—é –Ω–∏–∂—á–µ",
                                   parse_mode='html', reply_markup=group_menu_keyboard)

    if call.data == "back_to_general_menu":
        await bot.edit_message_text(chat_id=call.message.chat.id,
                                    message_id=call.message.message_id,
                                    text="–ú–∏ –∑–Ω–æ–≤—É –≤ –≥–æ–ª–æ–≤–Ω–æ–º—É –º–µ–Ω—é...\n–£—Ä–∞?üòê",
                                    reply_markup=general_menu_buttons)



async def update_users_data(user, users, status):
    try:
        with open("./data/users.json", 'w', encoding='UTF-8') as update_data:
            json.dump(users, update_data, ensure_ascii=False, indent=4)

            if status == "new_member":
                await bot.send_message(config.admin, f"""–î–æ–¥–∞–Ω–æ –Ω–æ–≤–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:
<b>
–Ü–º'—è: {user.from_user.first_name}  
–§–∞–º—ñ–ª—ñ—è: {user.from_user.last_name}
–Æ–∑–µ—Ä–Ω–µ–π–º: @{user.from_user.username}
id: {user.from_user.id}
</b>
        """, parse_mode='html')
            elif status == "new_group_select":
                await bot.send_message(config.admin, f"""–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –æ–±—Ä–∞–≤ –≥—Ä—É–ø—É {users[str(user.from_user.id)]['group']}:
<b>
–Ü–º'—è: {user.from_user.first_name}  
–§–∞–º—ñ–ª—ñ—è: {user.from_user.last_name}
–Æ–∑–µ—Ä–Ω–µ–π–º: @{user.from_user.username}
id: {user.from_user.id}
</b>
        """, parse_mode='html')

    except JSONDecodeError as e:
        await bot.send_message(config.admin,f"–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–ø–∏—Å–∞—Ç–∏ –Ω–æ–≤—ñ –¥–∞–Ω—ñ –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞. –ü–æ–º–∏–ª–∫–∞: \n <code>{e}</code>", parse_mode='HTML')


@dp.callback_query_handler(lambda call: call.data in config.group_menu)
async def group_menu_func(call: types.CallbackQuery):
    group_menu_keyboard = keybs(keybs.keyboards).group_menu(call.data)
    today = datetime.datetime.today()
    tomorrow = today + datetime.timedelta(days=1)

    try:
        if call.data == config.group_menu[0]:
            print(timetable[users[str(call.from_user.id)]['group']]['Monday'])
            await bot.edit_message_text(chat_id=call.from_user.id,
                                        message_id=call.message.message_id,
                                        text=f"–†–æ–∑–∫–ª–∞–¥ –Ω–∞ <b>{days_associations[today.strftime('%A')]}</b> "\
                                             f"{today.strftime('%d')} {months_associations[today.strftime('%B')]} {today.strftime('%Y')} —Ä–æ–∫—É\n\n"+
                                             '\n'.join(timetable[users[str(call.from_user.id)]['group']][today.strftime("%A")]),
                                        parse_mode='html',reply_markup=group_menu_keyboard)

        elif call.data == config.group_menu[1]:
            await bot.edit_message_text(chat_id=call.from_user.id,
                                        message_id=call.message.message_id,
                                        text=f"–†–æ–∑–∫–ª–∞–¥ –Ω–∞ <b>{days_associations[tomorrow.strftime('%A')]}</b> "\
                                             f"{tomorrow.strftime('%d')} {months_associations[tomorrow.strftime('%B')]} {today.strftime('%Y')} —Ä–æ–∫—É\n\n"+
                                                           '\n'.join(timetable[users[str(call.from_user.id)]['group']][tomorrow.strftime("%A")]),
                                        parse_mode='html', reply_markup=group_menu_keyboard)

        elif call.data == config.group_menu[2]:
            group = timetable[users[str(call.from_user.id)]['group']]
            week_timetable = """
–†–æ–∑–∫–ª–∞–¥ –Ω–∞ —Ç–∏–∂–¥–µ–Ω—å:\n
<b>–ü–æ–Ω–µ–¥—ñ–ª–æ–∫</b>
{0}\n\n
<b>–í—ñ–≤—Ç–æ—Ä–æ–∫</b>
{1}\n\n
<b>–°–µ—Ä–µ–¥–∞</b>
{2}\n\n
<b>–ß–µ—Ç–≤–µ—Ä</b>
{3}\n\n
<b>–ü`—è—Ç–Ω–∏—Ü—è</b>
{4}\n\n""".format('\n'.join(group['Monday']),
                  '\n'.join(group['Tuesday']),
                  '\n'.join(group['Wednesday']),
                  '\n'.join(group['Thursday']),
                  '\n'.join(group['Friday']))

            await bot.edit_message_text(chat_id=call.from_user.id,
                                        message_id=call.message.message_id,
                                        text=week_timetable,
                                        parse_mode='html', reply_markup=group_menu_keyboard)
        elif call.data == config.group_menu[3]:
            await bot.edit_message_text(chat_id=call.message.chat.id,
                                        message_id=call.message.message_id,
                                        text="–©–æ –∂, –æ–±–µ—Ä–∏ —Å–≤—ñ–π —Ñ–∞–∫—É–ª—å—Ç–µ—Ç...",
                                        reply_markup=facults_menu_buttons)


    except exceptions.MessageNotModified:
        pass




if __name__ == "__main__":
    group_changes = ''

    general_menu_buttons = keybs(keybs.keyboards).upload_general_menu()
    facults_menu_buttons = keybs(keybs.keyboards).facults_select_menu()

    facults_for_select_groups = [s[0:10] for s in config.facults_menu_buttons.keys()]

    #–ó–±–∏—Ä–∞—î–º–æ –≥—Ä—É–ø–∏ –ø–æ–æ–¥–∏–Ω–∏—á–Ω–æ –¥–ª—è –æ–±—Ä–æ–±–Ω–∏–∫–∞ –≤–∏–±–æ—Ä–∞ —Å–≤–æ—î—ó –≥—Ä—É–ø–∏
    groups_list = []
    for groups_lists in config.facults_menu_buttons.values():
        for groups in groups_lists:
            groups_list.append(groups)
   
    with open('./data/users.json', 'r', encoding='UTF-8') as read_users:
        users = json.load(read_users)

    with open('./data/data.json', 'r', encoding='UTF-8') as read_timetable:
        timetable = json.load(read_timetable)

    executor.start_polling(dp, skip_updates=True)
